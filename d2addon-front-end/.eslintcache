[{"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\index.js":"1","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\serviceWorker.js":"2","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\common\\navbar.js":"3","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\user\\login\\index.js":"4","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\contactme\\index.js":"5","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\dashboard\\index.js":"6","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\user\\signup\\index.js":"7","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\stashviewer\\index.js":"8","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\filehandling\\index.js":"9","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\common\\authapi.js":"10","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\stashviewer\\itemfilters.js":"11","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\App.js":"12","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\routes\\index.js":"13"},{"size":701,"mtime":1610503016772,"results":"14","hashOfConfig":"15"},{"size":5086,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":2175,"mtime":1610499618818,"results":"17","hashOfConfig":"15"},{"size":2649,"mtime":1610503277975,"results":"18","hashOfConfig":"15"},{"size":173,"mtime":1610499327615,"results":"19","hashOfConfig":"15"},{"size":1011,"mtime":1610502946307,"results":"20","hashOfConfig":"15"},{"size":4097,"mtime":1610498820340,"results":"21","hashOfConfig":"15"},{"size":9497,"mtime":1610499742759,"results":"22","hashOfConfig":"15"},{"size":2458,"mtime":1610502959720,"results":"23","hashOfConfig":"15"},{"size":91,"mtime":1610497639749,"results":"24","hashOfConfig":"15"},{"size":8456,"mtime":1606858568024,"results":"25","hashOfConfig":"15"},{"size":762,"mtime":1610502795796,"results":"26","hashOfConfig":"15"},{"size":1830,"mtime":1610503248424,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wdji9w",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\index.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\serviceWorker.js",[],["58","59"],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\common\\navbar.js",["60","61","62","63","64","65"],"import React from 'react';\r\nimport \"../../css/navbar.css\"\r\n//import { Navbar, Nav, NavItem, MenuItem, NavDropdown } from 'react-bootstrap';\r\n\r\nfunction Navbar(){\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n\r\n    <a className=\"navbar-brand\" href=\"#\">\r\n        <img src=\"https://www.windows10themes.net/wallpaper/cat/games/diablo-3-2013-wallpaper/thumbs/thumbs_lod34.ico\" alt=\"logo\" style={{marginRight: '12px'}} width=\"40\" height=\"40\" className=\"d-inline-block align-top\" alt=\"\"></img>Navbar\r\n    </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/ContactMe\">Contact Me</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Dropdown\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a className=\"dropdown-item\" href=\"\">Action</a>\r\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n        </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\user\\login\\index.js",["66","67","68"],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\contactme\\index.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\dashboard\\index.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\user\\signup\\index.js",["69","70","71","72","73","74"],"import React, { useState } from 'react';\r\nimport AuthApi from \"../../common/authapi\";\r\nimport Cookies from 'js-cookie'\r\n\r\nconst CreateAccount = () => {\r\n  const [passwordConfirm,setPasswordConfirm] = useState(\"\");\r\n\r\n  const [invalidUsername,setInvalidUsername] = useState(false);\r\n  const [invalidPassword,setInvalidPassword] = useState(false);\r\n  const [invalidPasswordConfirm,setInvalidPasswordConfirm] = useState(false);\r\n  const [passwordMismatch,setPasswordMismatch] = useState(false);\r\n  const [loginFail,setLoginFail] = useState(false);\r\n\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const attemptCreateAccount = () => {\r\n        fetch(`http://localhost:5000/Createaccount?username=${Auth.username}&password=${Auth.password}`, {method: 'POST'})\r\n        .then(response => {\r\n            if(response.status == 200){\r\n                Auth.setAuth(true);\r\n                Cookies.set(\"user\",`${Auth.username}`, {expires: 7});\r\n            }\r\n            else setLoginFail(true);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const handleChange = event => {\r\n        switch (event.target.name){\r\n            case 'username':\r\n                Auth.setUsername(event.target.value);\r\n                break;\r\n            case 'password':\r\n                Auth.setPassword(event.target.value);\r\n                break;\r\n            case \"confirmPassword\":\r\n                setPasswordConfirm(event.target.value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        let tryAccountCreate = true;\r\n\r\n        if(Auth.username.length == 0){\r\n            setInvalidUsername(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidUsername(false);\r\n\r\n        if(Auth.password.length == 0){\r\n            setInvalidPassword(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidPassword(false);\r\n\r\n        if(passwordConfirm.length == 0){\r\n            setInvalidPasswordConfirm(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidPasswordConfirm(false);\r\n\r\n        if(passwordConfirm != Auth.password){\r\n            setPasswordMismatch(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setPasswordMismatch(false);\r\n\r\n        if(tryAccountCreate) attemptCreateAccount();\r\n\r\n    };\r\n\r\n    return(\r\n        <div className=\"CreateAccount\">\r\n            <h1>Create Account</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input name=\"username\" placeholder=\"username\" type=\"text\" value={Auth.username} onChange={handleChange} />\r\n                </div>\r\n                {invalidUsername ? (<div style={{ fontSize: 12, color: \"red\"}}>Username cannot be empty</div>\r\n                ) : null}\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input name=\"password\" placeholder=\"password\" type=\"password\" value={Auth.password} onChange={handleChange} />\r\n                </div>\r\n                {invalidPassword ? (<div style={{ fontSize: 12, color: \"red\"}}>Password cannot be empty</div>\r\n                ) : null}\r\n                <div>\r\n                    <label>Confirm Password</label>\r\n                    <input name=\"confirmPassword\" placeholder=\"confirm password\" type=\"password\" value={passwordConfirm} onChange={handleChange} />\r\n                </div>\r\n                {invalidPasswordConfirm ? (<div style={{ fontSize: 12, color: \"red\"}}>Password Confirm cannot be empty</div>\r\n                ) : null}\r\n                {passwordMismatch ? (<div style={{ fontSize: 12, color: \"red\"}}>Provided passwords do not match</div>\r\n                ) : null}\r\n                <button type=\"submit\">Create Account</button>\r\n                {loginFail ? (<div style={{ fontSize: 12, color: \"red\"}}>Provided username already exists, please choose a different one</div>\r\n                ) : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateAccount;","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\stashviewer\\index.js",["75","76","77","78"],"import React, { useState } from 'react';\r\nimport { itemFilters, defaultState, advancedStates } from \"./itemfilters\";\r\nimport { List, AutoSizer, CellMeasurer, CellMeasurerCache } from \"react-virtualized\";\r\nimport AuthApi from \"../common/authapi\";\r\n\r\nvar parse = require('html-react-parser'); /* recall the issue installing this */\r\n\r\nconst StashViewer= () => {\r\n  const [radioButtonStates, setRadioButtonStates] = useState(defaultState);\r\n  const [advancedFiltersStates, setAdvancedFiltersStates] = useState(advancedStates);\r\n  const [htmlDisplay, setHtmlDisplay] = useState('');\r\n  //const [itemQuerySet, setItemQuerySet] = useState([{test: \"one\", next:\"two\"}, {test: \"one1\", next:\"two1\"}]);\r\n  const [itemNameSet, setNameSet] = useState([]);\r\n\r\n  const Auth = React.useContext(AuthApi);\r\n  const cache = React.useRef(\r\n      new CellMeasurerCache({ \r\n          fixedWidth: true,\r\n          defaultHeight: 100,\r\n      })\r\n  );  //google this\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      let selectHtml = `select html, itemName, requiredLevel from items where ` +\r\n                            `(StashID in (SELECT stashID from stashes where userID = ` +\r\n                                `(SELECT id from users where username = '${Auth.username}'))) and `;\r\n      let itemCategorySetQuery = radioButtonStates.map( (state,  index) => {\r\n            if(state){\r\n                let categoryQueryPortion = getItemCategoryQuery(itemFilters[index].filterName);\r\n                let kindQueryPortion = advancedFiltersStates[index].map( (advState, subIndex) => {\r\n                    if(advState) {\r\n                        return `itemKind = '` + itemFilters[index].subFilters[subIndex].subFilterName + `'`\r\n                    }\r\n                } );\r\n                var filteredKindQueryPortion = kindQueryPortion.filter( (element) => {\r\n                    return element !== undefined;\r\n                } );\r\n                let joinedQuery = `(` + categoryQueryPortion + ` and (` +  filteredKindQueryPortion.join(' or ') + `))`;\r\n                return joinedQuery;\r\n                //console.log(categoryQueryPortion);\r\n                //console.log(test1);\r\n            }\r\n        } );\r\n      //let finalQuery = categorySetQuery.join\r\n      var finalQuery = itemCategorySetQuery.filter( (element) => {\r\n          return element !== undefined;\r\n      } );\r\n      finalQuery = `(` +  finalQuery.join(' or ') + `)`;\r\n\r\n      console.log(selectHtml + finalQuery);\r\n      let allTogetherNow = selectHtml + finalQuery;\r\n      console.log(\"to grab: \" + allTogetherNow)\r\n\r\n      fetch(`http://localhost:5000/Getitems?sqlQuery=${allTogetherNow}`, {method: 'POST'})\r\n      .then(response => response.json())\r\n      .then(data => \r\n      {\r\n        if(data.length > 0){\r\n          console.log(\"data length: \" + data.length);\r\n          console.log(\"data: \" + data);\r\n          let itemNameHtmlList = data.map( (item) => {\r\n            return {\r\n                itemName: item.itemName,\r\n                itemHtml: item.html.substring(6, (item.html.length-8)).replace(/\\\\/g, \"\"),\r\n                itemReqLvl:  item.requiredLevel\r\n            };\r\n          });\r\n          itemNameHtmlList.sort( ( itemA, itemB ) => ( itemA.itemReqLvl > itemB.itemReqLvl ) ? 1 : (( itemB.itemReqLvl > itemA.itemReqLvl ) ? -1 : 0)); \r\n          /* below line is if i want to append\r\n           * setNameSet( previousData => [...previousData, ...itemNameHtmlList]);\r\n          */\r\n          setNameSet( [...itemNameHtmlList]);\r\n          /* !!!! don't forget that setState won't finish before this prints */\r\n          console.log(\"The first NOT REAL selection: \" + itemNameSet);\r\n\r\n           \r\n          /* below line removes html tags (can't have html object within html object) */\r\n          var huh =  itemNameHtmlList[0].itemHtml;\r\n          console.log(\"oops: \" + huh);\r\n          setHtmlDisplay( huh );\r\n        }\r\n      })\r\n      .catch(err => console.error(err))\r\n\r\n\r\n  };\r\n\r\n  const getItemCategoryQuery = (category) => {\r\n      switch(category) {\r\n          case 'Helm':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'head')`;\r\n          case 'Gloves':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'glov')`\r\n          case 'Belt':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'belt')`\r\n          case 'Boots':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'feet')`\r\n          case 'Shield':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'rarm')`\r\n          case 'Weapon':\r\n              return `(itemCategory = 'weapon' and bodyLocation1 = 'rarm')`\r\n          case 'Body':\r\n              return `(itemCategory = 'armor' and bodyLocation1 = 'tors')`\r\n          case 'Amulet':\r\n              return `(itemCategory = 'amulet')`\r\n          case 'Ring':\r\n              return `(itemCategory = 'ring')`\r\n          case 'Misc':\r\n              return `(itemCategory = 'misc')`\r\n          case 'Gem':\r\n              return `(itemCategory = 'gem')`\r\n          case 'Charm':\r\n              return `(itemCategory = 'smallcharm' or itemCategory = 'largecharm' or itemCategory = 'grandcharm')`\r\n          case 'Rune':\r\n              return `(itemCategory = 'rune')`\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <ul>\r\n        {itemFilters.map((filter) => (\r\n            <li key={filter.id}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id={filter.id}\r\n                    onClick={ (e) => {\r\n                        /* onClick will enable/display advanced filters for the filter checked */\r\n                        let newStates = radioButtonStates;\r\n                        newStates[e.target.id] = !newStates[e.target.id];\r\n                        setRadioButtonStates([...newStates]);\r\n                        if(newStates[e.target.id] === false){\r\n                            console.log(\"in here okasokyok\");\r\n                            var newAdvState = advancedFiltersStates;\r\n                            //newAdvState[e.target.id] = advancedStates[e.target.id]; the hook setter updates this extern json object, which i dont want it to do\r\n                            //newAdvState[e.target.id].map( (state) => state = false ); \r\n                            for(let i = 0; i < newAdvState[e.target.id].length; i++) newAdvState[e.target.id][i] = false;\r\n                            setAdvancedFiltersStates([...newAdvState]);\r\n                        }\r\n                        console.log(\"wtf: \" + radioButtonStates);\r\n                    }}\r\n                />\r\n                <label for={filter.filterName}>{filter.filterName}</label>\r\n                {filter.subFilters.map( (subFilter) => (\r\n                        radioButtonStates[filter.id]?\r\n                        <div>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={subFilter.id}\r\n                                onClick={ (e) => {\r\n                                    let newStates = advancedFiltersStates;\r\n                                    newStates[filter.id][e.target.id] = !newStates[filter.id][e.target.id];\r\n                                    setAdvancedFiltersStates([...newStates]);\r\n                                    console.log(\"adv: \" + advancedFiltersStates);\r\n                                }}\r\n                            /> \r\n                            <label for={subFilter.subFilterName}>{subFilter.subFilterName}</label>\r\n                        </div>\r\n                        : null\r\n                ) )}\r\n            </li>\r\n        ))}\r\n\r\n        </ul>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <div style={{backgroundColor: \"#878483\"}} >\r\n          {parse(htmlDisplay)}\r\n      </div>\r\n      {itemNameSet.length > 0 ? (\r\n        <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n            <AutoSizer>\r\n                { ({ width, height }) => (\r\n                    <List\r\n                        width={width}\r\n                        height={height}\r\n                        rowHeight={ cache.current.rowHeight }\r\n                        deferredMeasurementCache={ cache.current }\r\n                        rowCount={itemNameSet.length}\r\n                        rowRenderer={({ key, index, style, parent }) => {\r\n                            const itemName = itemNameSet[index].itemName;\r\n                            const itemReqLvl = itemNameSet[index].itemReqLvl;\r\n                    \r\n                            return(\r\n                                <CellMeasurer \r\n                                    key={key} \r\n                                    cache={cache.current}\r\n                                    parent={parent}\r\n                                    columnIndex={0}\r\n                                    rowIndex={index}\r\n                                > \r\n                                    <div style={style}>\r\n                                        <button onClick={ () => setHtmlDisplay( itemNameSet[index].itemHtml ) }>{`${itemName} ` + `(${itemReqLvl})` }</button>\r\n                                    </div>\r\n                                </CellMeasurer>\r\n                            );\r\n                        }}\r\n                    /> \r\n                ) }\r\n            </AutoSizer>\r\n        </div>\r\n      ) : (null) }\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default StashViewer;\r\n\r\n\r\n","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\filehandling\\index.js",["79","80","81"],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\common\\authapi.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\stashviewer\\itemfilters.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\App.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\modules\\routes\\index.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":9,"column":5,"nodeType":"88","endLine":9,"endColumn":42},{"ruleId":"89","severity":1,"message":"90","line":10,"column":221,"nodeType":"91","endLine":10,"endColumn":227},{"ruleId":"86","severity":1,"message":"87","line":25,"column":13,"nodeType":"88","endLine":25,"endColumn":162},{"ruleId":"86","severity":1,"message":"87","line":29,"column":13,"nodeType":"88","endLine":29,"endColumn":50},{"ruleId":"86","severity":1,"message":"87","line":30,"column":13,"nodeType":"88","endLine":30,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":32,"column":13,"nodeType":"88","endLine":32,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":27,"column":7,"nodeType":"94","messageId":"95","endLine":34,"endColumn":8},{"ruleId":"96","severity":1,"message":"97","line":40,"column":31,"nodeType":"98","messageId":"99","endLine":40,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":46,"column":31,"nodeType":"98","messageId":"99","endLine":46,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":20,"column":32,"nodeType":"98","messageId":"99","endLine":20,"endColumn":34},{"ruleId":"92","severity":1,"message":"93","line":30,"column":9,"nodeType":"94","messageId":"95","endLine":40,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":48,"column":33,"nodeType":"98","messageId":"99","endLine":48,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":54,"column":33,"nodeType":"98","messageId":"99","endLine":54,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":60,"column":35,"nodeType":"98","messageId":"99","endLine":60,"endColumn":37},{"ruleId":"96","severity":1,"message":"100","line":66,"column":28,"nodeType":"98","messageId":"99","endLine":66,"endColumn":30},{"ruleId":"101","severity":1,"message":"102","line":28,"column":73,"nodeType":"103","messageId":"104","endLine":28,"endColumn":75},{"ruleId":"101","severity":1,"message":"102","line":31,"column":95,"nodeType":"103","messageId":"104","endLine":31,"endColumn":97},{"ruleId":"92","severity":1,"message":"93","line":90,"column":7,"nodeType":"94","messageId":"95","endLine":117,"endColumn":8},{"ruleId":"105","severity":1,"message":"106","line":195,"column":129,"nodeType":"98","messageId":"107","endLine":195,"endColumn":130},{"ruleId":"96","severity":1,"message":"100","line":13,"column":31,"nodeType":"98","messageId":"99","endLine":13,"endColumn":33},{"ruleId":"96","severity":1,"message":"100","line":13,"column":70,"nodeType":"98","messageId":"99","endLine":13,"endColumn":72},{"ruleId":"96","severity":1,"message":"100","line":30,"column":31,"nodeType":"98","messageId":"99","endLine":30,"endColumn":33},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]