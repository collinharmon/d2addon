[{"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\index.js":"1","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\login.js":"2","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\navbar.js":"3","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\serviceWorker.js":"4","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\dashboard.js":"5","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\createaccount.js":"6","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\contactme.js":"7","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\stashviewer\\stashviewer.js":"8","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\authapi.js":"9","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\fileupload.js":"10","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\stashviewer\\itemfilters.js":"11"},{"size":692,"mtime":1606369548870,"results":"12","hashOfConfig":"13"},{"size":4577,"mtime":1606369548871,"results":"14","hashOfConfig":"13"},{"size":2171,"mtime":1603987584811,"results":"15","hashOfConfig":"13"},{"size":5086,"mtime":499162500000,"results":"16","hashOfConfig":"13"},{"size":994,"mtime":1606369548868,"results":"17","hashOfConfig":"13"},{"size":4086,"mtime":1604089394020,"results":"18","hashOfConfig":"13"},{"size":173,"mtime":1603987584805,"results":"19","hashOfConfig":"13"},{"size":10460,"mtime":1610212975913,"results":"20","hashOfConfig":"13"},{"size":91,"mtime":1603987584805,"results":"21","hashOfConfig":"13"},{"size":2450,"mtime":1608235065646,"results":"22","hashOfConfig":"13"},{"size":8456,"mtime":1606858568024,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wdji9w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\index.js",[],["51","52"],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\login.js",["53","54","55"],"import Dashboard from './dashboard.js';\r\nimport React, { useState } from 'react';\r\nimport {BrowserRouter as Router, Redirect, Switch, Route} from 'react-router-dom';\r\nimport Cookies from 'js-cookie'\r\nimport CreateAccount from './createaccount.js';\r\nimport ContactMe from './contactme.js';\r\n\r\nimport AuthApi from \"./authapi\";\r\nimport StashViewer from './stashviewer/stashviewer.js';\r\n\r\nconst Login = () => {\r\n  const [auth,setAuth] = useState(false);\r\n  const [username,setUsername] = useState('');\r\n  const [password,setPassword] = useState('');\r\n\r\n  const readCookie = () => {\r\n      const user = Cookies.get(\"user\");\r\n      if(user){\r\n          setAuth(true);\r\n          setUsername(user);\r\n      }\r\n  }\r\n  React.useEffect(() => {\r\n      readCookie();\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n      <AuthApi.Provider value={{auth, setAuth, username, setUsername, password, setPassword}}>\r\n        <Router>\r\n          <LoginRoutes/>\r\n        </Router>\r\n      </AuthApi.Provider>\r\n    </div>\r\n  )\r\n}\r\nconst LoginForm = () => {\r\n  const [invalidUsername,setInvalidUsername] = useState(false);\r\n  const [invalidPassword,setInvalidPassword] = useState(false);\r\n  const [loginFail,setLoginFail] = useState(false);\r\n\r\n  const Auth = React.useContext(AuthApi);\r\n  const handleOnClick = (event) => {\r\n      fetch(`http://localhost:5000/?username=${Auth.username}&password=${Auth.password}`)\r\n      .then(response => response.json())\r\n      .then(data => \r\n      {\r\n        if(data.length > 0){\r\n          console.log(data);\r\n          Auth.setAuth(true);\r\n          Cookies.set(\"user\", `${Auth.username}`, {expires: 7});\r\n        }\r\n        else setLoginFail(true);\r\n      })\r\n      .catch(err => console.error(err))\r\n\r\n  }\r\n  const handleChange = event => {\r\n      switch (event.target.name){\r\n        case 'username':\r\n          Auth.setUsername(event.target.value);\r\n          break;\r\n        case 'password':\r\n          Auth.setPassword(event.target.value);\r\n          break;\r\n      }\r\n  };\r\n  const handleSubmit = event => {\r\n      event.preventDefault();\r\n      console.log(\"submitted\");\r\n      let tryLogin = true;\r\n      if(Auth.username.length == 0){\r\n          setInvalidUsername(true);\r\n          tryLogin = false;\r\n      }\r\n      else setInvalidUsername(false);\r\n\r\n      if(Auth.password.length == 0){\r\n          setInvalidPassword(true);\r\n          tryLogin = false;\r\n      }\r\n      else setInvalidPassword(false);\r\n\r\n      if(tryLogin) handleOnClick();\r\n  };\r\n  return(\r\n    <div>\r\n      <h1>Welcome to the heaven's forge</h1>\r\n      <form onSubmit={handleSubmit}>\r\n          <div>\r\n              <label>Username</label>\r\n              <input name=\"username\" placeholder=\"username\" type=\"text\" value={Auth.username} onChange={handleChange} />\r\n          </div>\r\n          {invalidUsername ? (<div style={{ fontSize: 12, color: \"red\"}}>Username cannot be empty</div>\r\n          ) : null}\r\n          <div>\r\n              <label>Password</label>\r\n              <input name=\"password\" placeholder=\"password\" type=\"password\" value={Auth.password} onChange={handleChange} />\r\n          </div>\r\n          {invalidPassword ? (<div style={{ fontSize: 12, color: \"red\"}}>Password cannot be empty</div>\r\n          ) : null}\r\n          <button type=\"submit\">Login</button>\r\n          {loginFail ? (<div style={{ fontSize: 12, color: \"red\"}}>Username or Password is incorrect</div>\r\n          ) : null}\r\n      </form>\r\n      <a href=\"/CreateAccount\"><button>Create Account</button></a>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginRoutes = () =>{\r\n  const Auth = React.useContext(AuthApi);\r\n  return (\r\n    <Switch>\r\n      <ProtectedLogin exact path=\"/\" auth={Auth.auth}>\r\n          <LoginForm />\r\n      </ProtectedLogin>\r\n      <ProtectedLogin exact path=\"/CreateAccount\" auth={Auth.auth}>\r\n          <CreateAccount />\r\n      </ProtectedLogin>\r\n      <ProtectedDashboard exact path=\"/Dashboard\" auth={Auth.auth} >\r\n        <Dashboard />\r\n      </ProtectedDashboard>\r\n      <Route exact path=\"/ContactMe\" component={ContactMe} />\r\n      <Route exact path=\"/StashView\" component={StashViewer} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\nconst ProtectedDashboard = ({auth, children, ...rest}) =>{\r\n  return(\r\n    <Route\r\n    {...rest}\r\n    render = {() => auth? (\r\n        children\r\n    ) :\r\n      (\r\n        <Redirect to=\"/\"/>\r\n      )\r\n    }\r\n    />\r\n  )\r\n}\r\n\r\nconst ProtectedLogin = ({auth, children, ...rest}) =>{\r\n  return(\r\n    <Route\r\n    {...rest}\r\n    render = {() => !auth? (\r\n        children\r\n    ) :\r\n      (\r\n        <Redirect to=\"/Dashboard\"/>\r\n      )\r\n    }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\navbar.js",["56","57","58","59","60","61"],"import React from 'react';\r\nimport \"./css/navbar.css\"\r\n//import { Navbar, Nav, NavItem, MenuItem, NavDropdown } from 'react-bootstrap';\r\n\r\nfunction Navbar(){\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n\r\n    <a className=\"navbar-brand\" href=\"#\">\r\n        <img src=\"https://www.windows10themes.net/wallpaper/cat/games/diablo-3-2013-wallpaper/thumbs/thumbs_lod34.ico\" alt=\"logo\" style={{marginRight: '12px'}} width=\"40\" height=\"40\" className=\"d-inline-block align-top\" alt=\"\"></img>Navbar\r\n    </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/ContactMe\">Contact Me</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Dropdown\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a className=\"dropdown-item\" href=\"\">Action</a>\r\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n        </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\serviceWorker.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\dashboard.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\createaccount.js",["62","63","64","65","66","67"],"import React, { useState } from 'react';\r\nimport AuthApi from \"./authapi\";\r\nimport Cookies from 'js-cookie'\r\n\r\nconst CreateAccount = () => {\r\n  const [passwordConfirm,setPasswordConfirm] = useState(\"\");\r\n\r\n  const [invalidUsername,setInvalidUsername] = useState(false);\r\n  const [invalidPassword,setInvalidPassword] = useState(false);\r\n  const [invalidPasswordConfirm,setInvalidPasswordConfirm] = useState(false);\r\n  const [passwordMismatch,setPasswordMismatch] = useState(false);\r\n  const [loginFail,setLoginFail] = useState(false);\r\n\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const attemptCreateAccount = () => {\r\n        fetch(`http://localhost:5000/Createaccount?username=${Auth.username}&password=${Auth.password}`, {method: 'POST'})\r\n        .then(response => {\r\n            if(response.status == 200){\r\n                Auth.setAuth(true);\r\n                Cookies.set(\"user\",`${Auth.username}`, {expires: 7});\r\n            }\r\n            else setLoginFail(true);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const handleChange = event => {\r\n        switch (event.target.name){\r\n            case 'username':\r\n                Auth.setUsername(event.target.value);\r\n                break;\r\n            case 'password':\r\n                Auth.setPassword(event.target.value);\r\n                break;\r\n            case \"confirmPassword\":\r\n                setPasswordConfirm(event.target.value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        let tryAccountCreate = true;\r\n\r\n        if(Auth.username.length == 0){\r\n            setInvalidUsername(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidUsername(false);\r\n\r\n        if(Auth.password.length == 0){\r\n            setInvalidPassword(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidPassword(false);\r\n\r\n        if(passwordConfirm.length == 0){\r\n            setInvalidPasswordConfirm(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setInvalidPasswordConfirm(false);\r\n\r\n        if(passwordConfirm != Auth.password){\r\n            setPasswordMismatch(true);\r\n            tryAccountCreate = false;\r\n        }\r\n        else setPasswordMismatch(false);\r\n\r\n        if(tryAccountCreate) attemptCreateAccount();\r\n\r\n    };\r\n\r\n    return(\r\n        <div className=\"CreateAccount\">\r\n            <h1>Create Account</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input name=\"username\" placeholder=\"username\" type=\"text\" value={Auth.username} onChange={handleChange} />\r\n                </div>\r\n                {invalidUsername ? (<div style={{ fontSize: 12, color: \"red\"}}>Username cannot be empty</div>\r\n                ) : null}\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input name=\"password\" placeholder=\"password\" type=\"password\" value={Auth.password} onChange={handleChange} />\r\n                </div>\r\n                {invalidPassword ? (<div style={{ fontSize: 12, color: \"red\"}}>Password cannot be empty</div>\r\n                ) : null}\r\n                <div>\r\n                    <label>Confirm Password</label>\r\n                    <input name=\"confirmPassword\" placeholder=\"confirm password\" type=\"password\" value={passwordConfirm} onChange={handleChange} />\r\n                </div>\r\n                {invalidPasswordConfirm ? (<div style={{ fontSize: 12, color: \"red\"}}>Password Confirm cannot be empty</div>\r\n                ) : null}\r\n                {passwordMismatch ? (<div style={{ fontSize: 12, color: \"red\"}}>Provided passwords do not match</div>\r\n                ) : null}\r\n                <button type=\"submit\">Create Account</button>\r\n                {loginFail ? (<div style={{ fontSize: 12, color: \"red\"}}>Provided username already exists, please choose a different one</div>\r\n                ) : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateAccount;","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\contactme.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\stashviewer\\stashviewer.js",["68","69","70","71"],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\authapi.js",[],"C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\fileupload.js",["72","73","74"],"import React, { Fragment, useState } from 'react';\r\nimport AuthApi from \"./authapi\";\r\n\r\nconst FileUpload = () => {\r\n    const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadFileFail, setUploadFileFail] = useState(false);\r\n    const [uploadFileSuccess, setUploadFileSuccess] = useState(false);\r\n    \r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const onChange = e => {\r\n        if( e.target.files[0] != undefined && e.target.files[0].name != undefined )\r\n        {\r\n            setFile(e.target.files[0]);\r\n            setFilename(e.target.files[0].name);\r\n        }\r\n    }\r\n\r\n    const onSubmit = e => {\r\n       e.preventDefault();\r\n       const formData = new FormData();\r\n       formData.append('thefile', file);\r\n       const options = {\r\n           method: 'POST',\r\n           body: formData\r\n       };\r\n       fetch(`http://localhost:5000/upload/?username=${Auth.username}`, options)\r\n       .then(response => {\r\n           if(response.status != 200){\r\n                setUploadFileFail(true);\r\n                setUploadFileSuccess(false);\r\n           } \r\n           else{\r\n                setUploadFileFail(false);\r\n                setUploadFileSuccess(true);\r\n           }\r\n           console.log(response.status);\r\n        })\r\n       .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='custom-file mb-4'>\r\n                    <input type='file'\r\n                            className='custom-file-input' \r\n                            id='customFile'\r\n                            onChange={onChange} \r\n                    />\r\n                    <label \r\n                        className='custom-file-label' \r\n                        htmlFor='customFile'>\r\n                            {filename}\r\n                    </label>\r\n                </div>\r\n                <input type=\"submit\" \r\n                       value=\"Upload\" \r\n                       className=\"btn btn-primary btn-block mt-4\" />\r\n                {uploadFileFail? (<div style={{ fontSize: 12, color: \"red\"}}>Failed to upload file, contact admin</div>\r\n                ) : null}\r\n                {uploadFileSuccess? (<div style={{ fontSize: 12, color: \"green\"}}>Successfully uploaded file</div>\r\n                ) : null}\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default FileUpload;","C:\\Users\\colli\\webdev\\d2addon\\d2addon-front-end\\src\\stashviewer\\itemfilters.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":59,"column":7,"nodeType":"81","messageId":"82","endLine":66,"endColumn":8},{"ruleId":"83","severity":1,"message":"84","line":72,"column":31,"nodeType":"85","messageId":"86","endLine":72,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":78,"column":31,"nodeType":"85","messageId":"86","endLine":78,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":9,"column":5,"nodeType":"89","endLine":9,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":10,"column":221,"nodeType":"92","endLine":10,"endColumn":227},{"ruleId":"87","severity":1,"message":"88","line":25,"column":13,"nodeType":"89","endLine":25,"endColumn":162},{"ruleId":"87","severity":1,"message":"88","line":29,"column":13,"nodeType":"89","endLine":29,"endColumn":50},{"ruleId":"87","severity":1,"message":"88","line":30,"column":13,"nodeType":"89","endLine":30,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":32,"column":13,"nodeType":"89","endLine":32,"endColumn":51},{"ruleId":"83","severity":1,"message":"84","line":20,"column":32,"nodeType":"85","messageId":"86","endLine":20,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":30,"column":9,"nodeType":"81","messageId":"82","endLine":40,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":48,"column":33,"nodeType":"85","messageId":"86","endLine":48,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":54,"column":33,"nodeType":"85","messageId":"86","endLine":54,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":60,"column":35,"nodeType":"85","messageId":"86","endLine":60,"endColumn":37},{"ruleId":"83","severity":1,"message":"93","line":66,"column":28,"nodeType":"85","messageId":"86","endLine":66,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":63,"column":73,"nodeType":"96","messageId":"97","endLine":63,"endColumn":75},{"ruleId":"94","severity":1,"message":"95","line":66,"column":95,"nodeType":"96","messageId":"97","endLine":66,"endColumn":97},{"ruleId":"79","severity":1,"message":"80","line":125,"column":7,"nodeType":"81","messageId":"82","endLine":152,"endColumn":8},{"ruleId":"98","severity":1,"message":"99","line":230,"column":129,"nodeType":"85","messageId":"100","endLine":230,"endColumn":130},{"ruleId":"83","severity":1,"message":"93","line":13,"column":31,"nodeType":"85","messageId":"86","endLine":13,"endColumn":33},{"ruleId":"83","severity":1,"message":"93","line":13,"column":70,"nodeType":"85","messageId":"86","endLine":13,"endColumn":72},{"ruleId":"83","severity":1,"message":"93","line":30,"column":31,"nodeType":"85","messageId":"86","endLine":30,"endColumn":33},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]